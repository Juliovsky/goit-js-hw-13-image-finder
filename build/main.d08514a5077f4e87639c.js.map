{"version":3,"sources":["webpack:///./js/addImg.js","webpack:///./js/api.js"],"names":["refs","formInput","document","querySelector","loadButton","cardsList","pageNum","addEventListener","showImages","window","scrollTo","top","behavior","e","console","log","target","nodeName","basicLightbox","toElement","currentSrc","show","prevQuery","preventDefault","query","value","innerHTML","pageNumb","fetch","then","res","json","data","catch","error","downloadImg","hits","length","notice","PNotify","success","title","text","modules","Buttons","closer","sticker","on","close","noticeErr","getMessage","closeAll","insertAdjacentHTML","reduce","acc","item","webformatURL","tags","favorites","views","comments","downloads","createList","event","documentElement","getBoundingClientRect","bottom","clientHeight"],"mappings":"wNAUA,MAAMA,EAAO,CACTC,UAAWC,SAASC,cAAc,gBAClCC,WAAYF,SAASC,cAAc,aACnCE,UAAWH,SAASC,cAAc,aAGtC,IAAIG,EAAU,EAEdN,EAAKC,UAAUM,iBAAiB,SAAUC,GAE1CR,EAAKI,WAAWG,iBAAiB,SAuGjC,WACIE,OAAOC,SAAS,CACZC,IAAK,EACLC,SAAU,cAzGlBZ,EAAKK,UAAUE,iBAAiB,SAEhC,SAAiBM,GAEb,GADAC,QAAQC,IAAIF,GACc,QAAtBA,EAAEG,OAAOC,SAAoB,CACZC,SAAsB,gEAEnBL,EAAEM,UAAUC,6DAGvBC,OAEbP,QAAQC,IAAIF,EAAEM,UAAUC,eAE5B,IAAIE,EAAY,GAEhB,SAASd,EAAWK,GAChBA,EAAEU,iBACF,IAAIC,EAAQxB,EAAKC,UAAUE,cAAc,SAErCqB,EAAMC,QAAUH,IAChBtB,EAAKK,UAAUqB,UAAY,GAC3BpB,EAAU,GCvCS,EAACkB,EAAOG,IACxBC,MAAO,sEAAuDJ,UAAcG,wDAClFE,KAAKC,GAAKA,EAAIC,QACdF,KAAKG,GAAMA,GACXC,MAAMC,GAAOpB,QAAQoB,MAAM,QAAQA,IDsCpCC,CAAYX,EAAMC,MAAOnB,GACpBuB,KAAKG,KAoCd,SAAoBA,GAChB,GAAIA,EAAKI,KAAKC,OAAS,GAAKL,EAAKI,KAAKC,QAAU,GAAI,CAChD,IAAIC,EAASC,IAAQC,QAAQ,CACzBC,MAAO,WACPC,KAAO,GAAEV,EAAKI,KAAKC,0CACnBM,QAAS,CACLC,QAAS,CACLC,QAAQ,EACRC,SAAS,MAKrBR,EAAOS,GAAG,SAAS,WACfT,EAAOU,WAGd,GAAuB,IAAnBhB,EAAKI,KAAKC,OACX,CAAC,IAAIY,EAAYV,IAAQL,MAAM,CAC3BO,MAAO,yBACPC,KAAO,2DACPC,QAAS,CACLC,QAAS,CACLC,QAAQ,EACRC,SAAS,MAKrBG,EAAUF,GAAG,SAAS,WAClBE,EAAUD,YAjEVE,CAAWlB,GAuEnBO,IAAQY,WACR7C,IAtEQN,EAAKK,UAAU+C,mBAAmB,YAM9C,SAAoBpB,GAuBhB,OAtBAlB,QAAQC,IAAIiB,GACFA,EAAKI,KAAKiB,OAAO,CAACC,EAAKC,IACtBD,EAAO,oEACJC,EAAKC,sBAAsBD,EAAKE,6JAIAF,EAAKG,8GAGHH,EAAKI,uGAG7CJ,EAAKK,gHAGNL,EAAKM,yDAIT,IA3BoDC,CAAW9B,MAElEV,EAAYE,EAAMC,MAClBX,QAAQC,IAAI,OA6EhBN,OAAOF,iBAAiB,UAGxB,SAAewD,GACX,KAAI7D,SAAS8D,gBAAgBC,wBAAwBC,OAAShE,SAAS8D,gBAAgBG,aAAe,KAIlG,OAHA3D,EAAWuD,GACXjD,QAAQC,IAAI,a","file":"main.d08514a5077f4e87639c.js","sourcesContent":["import {\n    downloadImg\n} from \"./api\";\nimport './addImg.css'\nimport PNotify from 'pnotify/dist/es/PNotify.js';\nimport 'pnotify/dist/PNotifyBrightTheme.css';\nimport * as basicLightbox from 'basiclightbox';\nimport 'basiclightbox/dist/basicLightbox.min.css';\n\n\nconst refs = {\n    formInput: document.querySelector('#search-form'),\n    loadButton: document.querySelector('.myButton'),\n    cardsList: document.querySelector('.gallery'),\n}\n\nlet pageNum = 1;\n\nrefs.formInput.addEventListener('submit', showImages)\n\nrefs.loadButton.addEventListener('click', myScroll);\nrefs.cardsList.addEventListener('click', myModal);\n\nfunction myModal(e) {\n    console.log(e);\n    if (e.target.nodeName === 'IMG') {\n        const instance = basicLightbox.create(`\n            <div class=\"modal\">\n                <img src=\"${e.toElement.currentSrc}\" width=\"800\" height=\"600\">\n            </div>`);\n\n        instance.show();\n    }\n    console.log(e.toElement.currentSrc);\n}\nlet prevQuery = \"\";\n\nfunction showImages(e) {\n    e.preventDefault();\n    let query = refs.formInput.querySelector('input');\n\n    if (query.value !== prevQuery) {\n        refs.cardsList.innerHTML = '';\n        pageNum = 1;\n    }\n\n    downloadImg(query.value, pageNum)\n        .then(data => {\n            getMessage(data);\n            addImage();\n            refs.cardsList.insertAdjacentHTML('beforeend', createList(data));\n        })\n    prevQuery = query.value;\n    console.log('kek');\n}\n\nfunction createList(data) {\n    console.log(data);\n    let res = data.hits.reduce((acc, item) => {\n        return acc + `<li class=gallery-item><div class=\"photo-card\">\n      <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" width= \"350px\" height = \"250px\"/>\n    \n      <div class=\"stats\">\n        <p class=\"stats-item\">\n          <i class=\"material-icons\">thumb_up</i>${item.favorites}\n        </p>\n        <p class=\"stats-item\">\n          <i class=\"material-icons\">visibility</i>${item.views}\n        </p>\n        <p class=\"stats-item\"><i class=\"material-icons\">comment</i>\n          ${item.comments}\n        </p>\n        <p class=\"stats-item\"><i class=\"material-icons\">cloud_download</i>\n         ${item.downloads}\n        </p>\n      </div>\n    </div></li>`;\n    }, '');\n\n    return res;\n\n}\n\nfunction getMessage(data) {\n    if (data.hits.length > 0 && data.hits.length <= 12) {\n        let notice = PNotify.success({\n            title: 'Success!',\n            text: `${data.hits.length} images were successfully loaded `,\n            modules: {\n                Buttons: {\n                    closer: false,\n                    sticker: false\n                }\n            }\n        });\n\n        notice.on('click', function () {\n            notice.close();\n        });\n    };\n     if (data.hits.length===0)\n        {let noticeErr = PNotify.error({\n            title: 'I have nothing for you',\n            text: `Try once more time. And I will be trying better for you `,\n            modules: {\n                Buttons: {\n                    closer: false,\n                    sticker: false\n                }\n            }\n        });\n\n        noticeErr.on('click', function () {\n            noticeErr.close();\n        });\n    }\n}\n\nfunction addImage() {\n    PNotify.closeAll();\n    pageNum++;\n}\n\nfunction myScroll() {\n    window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n    });\n}\n\nwindow.addEventListener('scroll', scrol);\n\n\nfunction scrol(event) {\n    if (document.documentElement.getBoundingClientRect().bottom < document.documentElement.clientHeight + 100) {\n        showImages(event);\n        console.log(\"info\");\n    } else {\n        return;\n    }\n}","const baseUrl = \"https://pixabay.com/api/\";\nlet quantityPerPage = 12;\nlet myKey = '16022582-a19fdcc5907c59857509aea92';\n \nexport const downloadImg = (query, pageNumb) =>{\n    return fetch(`${baseUrl}?image_type=photo&orientation=horizontal&q=${query}&page=${pageNumb}&per_page=${quantityPerPage}&key=${myKey}`)\n    .then(res=>res.json())\n    .then(data=>data)\n    .catch(error=>console.error(\"ERROR\",error));\n};\n"],"sourceRoot":""}